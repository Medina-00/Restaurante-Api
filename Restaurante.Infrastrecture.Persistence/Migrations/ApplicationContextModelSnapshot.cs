// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurante.Infrastrecture.Persistence.Context;

#nullable disable

namespace Restaurante.Infrastrecture.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IngredientePlato", b =>
                {
                    b.Property<int>("IngredientesIdIngrediente")
                        .HasColumnType("int");

                    b.Property<int>("PlatosIdPlato")
                        .HasColumnType("int");

                    b.HasKey("IngredientesIdIngrediente", "PlatosIdPlato");

                    b.HasIndex("PlatosIdPlato");

                    b.ToTable("PlatoIngrediente", (string)null);
                });

            modelBuilder.Entity("OrdenPlato", b =>
                {
                    b.Property<int>("OrdenesIdOrden")
                        .HasColumnType("int");

                    b.Property<int>("PlatosIdPlato")
                        .HasColumnType("int");

                    b.HasKey("OrdenesIdOrden", "PlatosIdPlato");

                    b.HasIndex("PlatosIdPlato");

                    b.ToTable("OrdenPlato", (string)null);
                });

            modelBuilder.Entity("Restaurante.Core.Domain.Entities.Ingrediente", b =>
                {
                    b.Property<int>("IdIngrediente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIngrediente"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdIngrediente");

                    b.ToTable("Ingredientes", (string)null);
                });

            modelBuilder.Entity("Restaurante.Core.Domain.Entities.Mesa", b =>
                {
                    b.Property<int>("IdMesa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMesa"));

                    b.Property<int>("CantidadPersona")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoMesa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMesa");

                    b.ToTable("Mesas", (string)null);
                });

            modelBuilder.Entity("Restaurante.Core.Domain.Entities.Orden", b =>
                {
                    b.Property<int>("IdOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrden"));

                    b.Property<string>("EstadoOrden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdMesa")
                        .HasColumnType("int");

                    b.Property<string>("ListaPlatos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdOrden");

                    b.HasIndex("IdMesa");

                    b.ToTable("Ordenes", (string)null);
                });

            modelBuilder.Entity("Restaurante.Core.Domain.Entities.Plato", b =>
                {
                    b.Property<int>("IdPlato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlato"));

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListaIngredientes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Personas")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdPlato");

                    b.ToTable("Platos", (string)null);
                });

            modelBuilder.Entity("IngredientePlato", b =>
                {
                    b.HasOne("Restaurante.Core.Domain.Entities.Ingrediente", null)
                        .WithMany()
                        .HasForeignKey("IngredientesIdIngrediente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurante.Core.Domain.Entities.Plato", null)
                        .WithMany()
                        .HasForeignKey("PlatosIdPlato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrdenPlato", b =>
                {
                    b.HasOne("Restaurante.Core.Domain.Entities.Orden", null)
                        .WithMany()
                        .HasForeignKey("OrdenesIdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurante.Core.Domain.Entities.Plato", null)
                        .WithMany()
                        .HasForeignKey("PlatosIdPlato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Restaurante.Core.Domain.Entities.Orden", b =>
                {
                    b.HasOne("Restaurante.Core.Domain.Entities.Mesa", "Mesa")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdMesa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mesa");
                });

            modelBuilder.Entity("Restaurante.Core.Domain.Entities.Mesa", b =>
                {
                    b.Navigation("Ordenes");
                });
#pragma warning restore 612, 618
        }
    }
}
